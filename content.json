{"meta":{"title":"xadjccl","subtitle":null,"description":null,"author":"xadjccl","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2019-01-27T06:11:55.000Z","updated":"2019-01-27T07:43:11.025Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"关于作者","date":"2019-01-27T06:12:29.000Z","updated":"2019-01-27T07:20:50.396Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-01-27T06:12:22.000Z","updated":"2019-01-27T07:43:00.742Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"（二）创建一个简单的SpringBoot应用","slug":"(二)创建一个简单的SpringBoot应用","date":"2019-01-28T06:16:10.974Z","updated":"2019-01-28T06:26:59.519Z","comments":false,"path":"2019/01/28/(二)创建一个简单的SpringBoot应用/","link":"","permalink":"http://yoursite.com/2019/01/28/(二)创建一个简单的SpringBoot应用/","excerpt":"","text":"走进SpringBoot之第一个SpringBoot应用&#160; &#160; &#160; &#160;接下来，我们就 一起来创建第一个SpringBoot 应用，关于IDE,写文章的时候使用的是Spring Tool Suite（STS），现在已经转为Idea，看个人喜好吧，自己怎么舒服怎么来，在工作中也没有强制一定要使用什么IDE。 言归正传， 下面的教程都是使用STS。 创建项目创建一个Spring Starter project 点击NEXT 选择对用的版本和WEB项目然后选择finish首先创建一个项目 POM.XML打开项目的POM.XML 你会发现自动给你导入了一些依赖&#160; &#160; &#160; &#160;首先导入SpringBoot的依赖，因为我们刚才创建项目的时候选择了web， 所以还 自动导入了spring-boot-starter-web依赖。你也可以创建一个普通的 Maven然后将这些依赖导入一下是一个意思。 项目目录 项目入口类：类上使用@SpringBootApplication 标识 该类为项目的入口类 然后我们创建一个包 编写Controller &#160; &#160; &#160; &#160;注意我们创建的包必须是在程序入口类 所在包的子包，这样写的@RestController才会被扫描到 &#160; &#160; &#160; &#160;接着我们启动项目，在入口类上 右键==》Run as ==》 Spring Boot App 程序成功启动，默认端口为 8080 浏览器上输入：http://localhost:8080/sayHello 输出。完毕 一个简单的SpringBoot的项目就搭建成功了，非常方便，少去了spring spring mvc的配置，就可以快速的创建一个web项目。 一般来说使用SpringBoot的其他功能的步骤： 1.添加依赖 2..使用注解编写一些配置或代码 就可以了 。 题外话：&#160; &#160; &#160; &#160;启动的时候这块 标志是可以修改的，在java/main/resource 下创建一个banner.txt 文件，里面写入你要的内容，启动就可以看见这块标识已经 被修改了。 要生成类似的字体可以访问http://patorjk.com/software/taag去生成.其实没啥用。。。","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/tags/SpringBoot/"}]},{"title":"(一)SpringBoot概述","slug":"(一)SpringBoot概述","date":"2019-01-28T01:53:01.871Z","updated":"2019-01-28T06:27:01.013Z","comments":false,"path":"2019/01/28/(一)SpringBoot概述/","link":"","permalink":"http://yoursite.com/2019/01/28/(一)SpringBoot概述/","excerpt":"什么是SpringBoot&#160; &#160; &#160; &#160;我们知道Spring使用一个轻量级的企业开发一站式解决方案，提供了最主要的IOC、AOP等相关支持，但是在开发过程中会发现，项目中多而繁杂的配置文件总是让人头疼。而SpringBoot就是使用默认的配置来简化开发过程。","text":"什么是SpringBoot&#160; &#160; &#160; &#160;我们知道Spring使用一个轻量级的企业开发一站式解决方案，提供了最主要的IOC、AOP等相关支持，但是在开发过程中会发现，项目中多而繁杂的配置文件总是让人头疼。而SpringBoot就是使用默认的配置来简化开发过程。 &#160; &#160; &#160; &#160;随着动态语言的发展，传统的Java开发显得格外的笨重，效率低，配置文件多且杂，部署流程复杂，集成第三方难度大，所以 出现了SpringBoot。&#160; &#160; &#160; &#160;之前看过一句话,什么是SpringBoot？SpringBoot是一个专注于框架的框架。说白了SpringBoot就是简化开发， 提高效率的这么一个东西。 SpringBoot应用可以打包成jar 以jar包 形式运行 SpringBoot内职tomcat、jetty等，我们可 以像运行java application那样运行一个java web项目 SpringBoot提供 starter来简化Maven配置，我们只需要导入几个starter就可以省去好多 maven的配置 SpringBoot无代码生成和XML配置，使用“习惯优于配置“” 的想法来开发项目，在使用它的时候一般使用一些 注解，就可以完成，不需要写代码 SpringBoot对第三方的支持，支持各种第三方，只要导入依赖就能快速的使用，例如Mybatis等 &#160; &#160; &#160; &#160;说了这么多，还不如动手来试试 接下来我们来创建一个SpringBoot应用。 网上有很多大佬写了SpringBoot系列博客，该博文主要作为自己的技术总结，也希望对正在学习的朋友们有些许帮助。","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/tags/SpringBoot/"}]}]}